service: serverless-processing

frameworkVersion: '>=1.28.0 <2.0.0'

plugins:
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters

custom:
  tableName: pipeline-configs-${self:provider.stage}


provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage}
  region: eu-west-2

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  manage-pipeline:
    handler: bin/manage-pipeline
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          maximumRetryAttempts: 2
          enabled: true
          arn:
            Fn::GetAtt:
              - PipelineConfigTable
              - StreamArn
    environment:
      DYNAMO_PIPELINE_CONFIGS_TABLE_NAME: ${self:custom.tableName}
      ENV_NAME: ${self:provider.stage}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:scan
          - dynamodb:ListStreams
          - dynamodb:DescribeTable
          - dynamodb:UpdateItem
          - dynamodb:GetItem
        Resource: arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.tableName}
      - Effect: Allow
        Action:
          - sqs:TagQueue
          - sqs:CreateQueue
          - sqs:SetQueueAttributes
          - sqs:GetQueueAttributes
        Resource: arn:aws:sqs:${self:provider.region}:#{AWS::AccountId}:*

resources:
  Resources:
    PipelineConfigTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

    LambdaCodeBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: kinluek-serverless-processing-code
